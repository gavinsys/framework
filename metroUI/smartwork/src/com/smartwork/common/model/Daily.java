package com.smartwork.common.model;

import java.util.List;

import com.jfinal.plugin.activerecord.Page;
import com.smartwork.common.model.base.BaseDaily;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Daily extends BaseDaily<Daily> {
	public static final Daily dao = new Daily();

	public Page<Daily> findAll(int pageNumber, int pageSize) {
		return paginate(pageNumber, pageSize, "select d.*,c.dept,c.jobs,c.nameen ", "from daily d left join contacts c on d.contactsId=c.id group by c.dept,c.jobs,d.id order by d.created desc");
	}
	
	public List<Daily> findAll() {
		return find("select d.*,c.dept,c.jobs,c.nameen from daily d left join contacts c on d.contactsId=c.id group by c.dept,c.jobs,d.id order by d.created desc");
	}
	
	public Page<Daily> findByJobsPage(int pageNumber, int pageSize,String dept, Integer jobs) {
		return paginate(pageNumber, pageSize, "select d.*,c.dept,c.jobs,c.nameen ", "from daily d left join contacts c on d.contactsId=c.id where c.dept=? and c.jobs>? group by c.dept,c.jobs,d.id order by d.created desc", dept, jobs);
	}

	public Page<Daily> findByContactsPage(int pageNumber, int pageSize, String contactsId) {
		return paginate(pageNumber, pageSize, "select d.*,c.dept,c.jobs,c.nameen ", "from daily d left join contacts c on d.contactsId=c.id where c.id=? order by d.created desc", contactsId);
	}
	
	public List<Daily> findByJobs(String dept, Integer jobs) {
		return find("select d.*,c.dept,c.jobs,c.nameen from daily d left join contacts c on d.contactsId=c.id where c.dept=? and c.jobs>? group by c.dept,c.jobs,d.id order by d.created desc", dept, jobs);
	}

	public List<Daily> findByContacts(String contactsId) {
		return find("select d.*,c.dept,c.jobs,c.nameen from daily d left join contacts c on d.contactsId=c.id where c.id=? order by d.created desc", contactsId);
	}
	
}
